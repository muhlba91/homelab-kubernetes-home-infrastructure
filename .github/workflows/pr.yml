---
name: Pull Request

on:
  pull_request:

env:
  NODE_OPTIONS: "--max-old-space-size=4096"

jobs:
  conform:
    runs-on: ubuntu-latest
    name: Conform

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: siderolabs/conform@v0.1.0-alpha.27
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  lint:
    runs-on: ubuntu-latest
    name: ESLint
    strategy:
      max-parallel: 12
      matrix:
        node-version: ["20"]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - run: |
          corepack enable

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - run: |
          yarn install --immutable
          yarn lint

  audit:
    runs-on: ubuntu-latest
    name: Node Audit
    strategy:
      max-parallel: 12
      matrix:
        node-version: ["20"]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - run: |
          corepack enable

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - run: |
          yarn install --immutable
          yarn npm audit
        continue-on-error: true

  build:
    runs-on: ubuntu-latest
    name: Build IaC code
    strategy:
      max-parallel: 12
      matrix:
        node-version: ["20"]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - run: |
          corepack enable

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - run: |
          yarn install --immutable
          yarn build

  firehose-processor:
    runs-on: ubuntu-latest
    name: Check the Firehose Processor
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.11"]
        poetry-version: [1.7.1]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up Poetry ${{ matrix.poetry-version }}
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - name: Install dependencies
        working-directory: assets/home_assistant/firehose/processor
        run: |
          python -m pip install --upgrade pip
          poetry install

      - name: Lint files
        working-directory: assets/home_assistant/firehose/processor
        run: |
          poetry check
          poetry run ruff check .

  preview:
    runs-on: ubuntu-latest
    name: Pulumi Preview
    needs:
      - lint
      - build
    permissions:
      id-token: write
      contents: read
      pull-requests: write
    strategy:
      max-parallel: 12
      matrix:
        node-version: ["20"]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - run: |
          corepack enable

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - uses: hashicorp/vault-action@v3
        id: import-secrets
        with:
          method: jwt
          url: ${{ secrets.VAULT_ADDR }}
          path: ${{ secrets.VAULT_PATH }}
          role: ${{ secrets.VAULT_ROLE }}
          exportToken: true
          outputToken: true
          secrets: |
            github-homelab-kubernetes-home-infrastructure/data/google-cloud region | CLOUDSDK_COMPUTE_REGION ;
            github-homelab-kubernetes-home-infrastructure/data/google-cloud workload_identity_provider | GOOGLE_WORKLOAD_IDENTITY_PROVIDER ;
            github-homelab-kubernetes-home-infrastructure/data/google-cloud ci_service_account | GOOGLE_WORKLOAD_IDENTITY_SERVICE_ACCOUNT ;
            github-homelab-kubernetes-home-infrastructure/data/aws region | AWS_REGION ;
            github-homelab-kubernetes-home-infrastructure/data/aws identity_role_arn | AWS_IDENTITY_ROLE_ARN ;
            github-homelab-kubernetes-home-infrastructure/data/github token | GH_PAT_TOKEN ;
            github-homelab-kubernetes-home-infrastructure/data/tailscale oauth_client_id | TS_OAUTH_CLIENT_ID ;
            github-homelab-kubernetes-home-infrastructure/data/tailscale oauth_secret | TS_OAUTH_SECRET

      - uses: pulumi/auth-actions@v1
        with:
          organization: muhlba91
          requested-token-type: urn:pulumi:token-type:access_token:personal
          scope: user:muhlba91

      - uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ env.GOOGLE_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.GOOGLE_WORKLOAD_IDENTITY_SERVICE_ACCOUNT }}

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_IDENTITY_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - run: |
          yarn install --immutable
          yarn build

      - uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ env.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ env.TS_OAUTH_SECRET }}
          tags: tag:github-actions
      
      - uses: pulumi/actions@v6
        with:
          command: preview
          stack-name: prod
          comment-on-pr: true
          refresh: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          VAULT_ADDR: "${{ secrets.VAULT_ADDR }}"
