---
name: Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  preview:
    runs-on: ubuntu-latest
    name: Pulumi Preview
    strategy:
      max-parallel: 12
      matrix:
        node-version: ["16"]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: ${{ secrets.GOOGLE_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GOOGLE_WORKLOAD_IDENTITY_SERVICE_ACCOUNT }}

      - name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_IDENTITY_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - run: |
          npm install -g yarn

      - run: |
          yarn install
          yarn build

      - uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:github-actions
      
      - uses: pulumi/actions@v4
        with:
          command: preview
          stack-name: prod
          # refresh: true # FIXME:
        env:
          CLOUDSDK_COMPUTE_REGION: "${{ secrets.CLOUDSDK_COMPUTE_REGION }}"
          GITHUB_TOKEN: "${{ secrets.GH_PAT_TOKEN }}"
          PULUMI_ACCESS_TOKEN: "${{ secrets.PULUMI_ACCESS_TOKEN }}"
          PROXMOX_VE_USERNAME: "${{ secrets.PROXMOX_VE_USERNAME }}"
          PROXMOX_VE_PASSWORD: "${{ secrets.PROXMOX_VE_PASSWORD }}"
          PROXMOX_VE_ENDPOINT: "${{ secrets.PROXMOX_VE_ENDPOINT }}"
          PROXMOX_VE_INSECURE: "${{ secrets.PROXMOX_VE_INSECURE }}"
          AWS_REGION: "${{ secrets.AWS_REGION }}"
          DOPPLER_TOKEN: "${{ secrets.DOPPLER_TOKEN }}"

  deploy:
    runs-on: ubuntu-latest
    name: Pulumi Deploy
    needs:
      - preview
    strategy:
      max-parallel: 12
      matrix:
        node-version: ["16"]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: jaxxstorm/action-install-gh-release@v1.10.0
        with:
          repo: k0sproject/k0sctl
          extension-matching: disable
          rename-to: k0sctl
          chmod: 0755

      - uses: yokawasa/action-setup-kube-tools@v0.9.3
        with:
          setup-tools: helm

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: ${{ secrets.GOOGLE_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GOOGLE_WORKLOAD_IDENTITY_SERVICE_ACCOUNT }}

      - name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_IDENTITY_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - run: |
          npm install -g yarn

      - run: |
          yarn install
          yarn build

      - uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:github-actions
      
      - uses: pulumi/actions@v4
        with:
          command: up
          stack-name: prod
        env:
          CLOUDSDK_COMPUTE_REGION: "${{ secrets.CLOUDSDK_COMPUTE_REGION }}"
          GITHUB_TOKEN: "${{ secrets.GH_PAT_TOKEN }}"
          PULUMI_ACCESS_TOKEN: "${{ secrets.PULUMI_ACCESS_TOKEN }}"
          PROXMOX_VE_USERNAME: "${{ secrets.PROXMOX_VE_USERNAME }}"
          PROXMOX_VE_PASSWORD: "${{ secrets.PROXMOX_VE_PASSWORD }}"
          PROXMOX_VE_ENDPOINT: "${{ secrets.PROXMOX_VE_ENDPOINT }}"
          PROXMOX_VE_INSECURE: "${{ secrets.PROXMOX_VE_INSECURE }}"
          AWS_REGION: "${{ secrets.AWS_REGION }}"
          DOPPLER_TOKEN: "${{ secrets.DOPPLER_TOKEN }}"

  triggers:
    runs-on: ubuntu-latest
    name: Trigger Downstream Pipelines
    needs:
      - deploy

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Deploy Services
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: deploy.yml
          repo: muhlba91/homelab-ansible-common-services
          inputs: '{ "s3_asset_bucket": "infrastructure-assets-5274ba70-fde0-47de-8e9a-f1bc64c11157/cluster/home/prod" }'
          token: "${{ secrets.GH_PAT_TOKEN }}"
